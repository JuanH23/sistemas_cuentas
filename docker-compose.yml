version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: sistema_cuentas_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/logs:/var/log/nginx
      - ./docker/ssl:/etc/nginx/ssl
    depends_on:
      - php
    networks:
      - app_network

  php:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    container_name: sistema_cuentas_php
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
    depends_on:
      - mysql
      - redis
    networks:
      - app_network

  mysql:
    image: mysql:8.0
    container_name: sistema_cuentas_mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpass123}
      MYSQL_DATABASE: central_db
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    command: --default-authentication-plugin=mysql_native_password --max_connections=500
    networks:
      - app_network

  redis:
    image: redis:alpine
    container_name: sistema_cuentas_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - app_network

  queue:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    container_name: sistema_cuentas_queue
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    command: php artisan queue:work --tries=3 --timeout=300
    depends_on:
      - mysql
      - redis
    networks:
      - app_network

  scheduler:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    container_name: sistema_cuentas_scheduler
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    command: >
      sh -c "while true; do
        php artisan schedule:run --verbose --no-interaction &
        sleep 60
      done"
    depends_on:
      - mysql
      - redis
    networks:
      - app_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: sistema_cuentas_phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: ${DB_ROOT_PASSWORD:-rootpass123}
      PMA_ARBITRARY: 1
      UPLOAD_LIMIT: 100M
    depends_on:
      - mysql
    networks:
      - app_network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  app_network:
    driver: bridge